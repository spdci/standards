openapi: 3.0.3
info:
  title: Interoperability APIs - Integrated Beneficiary Registry
  x-logo:
    url: './dci-logo.png'
    backgroundColor: '#FFFFFF'
    altText: 'Digital Convergence Initiative'  
  description: |-
    The IBR(Integrated Beneficiary Registry) interoperability APIs describes different APIs some of them are usecase specific and other are generalized APIs to perform interoperable operations between IBR registry and SP-System.
    You can now help us improve the API whether it's by making changes to the definition itself or to the code.
    That way, with time, we can improve the API in general, and expose some of the new features in upcoming version.

    1. Search: The Search API provides functionality to search based on demographic, identifiers and custom query
    2. Enrollment updates: The enrollment updates API send  details of beneficiaries enrolled in programs  from SP-System
    3. Enrolled : the enrolled API is a special type of search to return the programs a beneficiary is enrolled in
   
    Gitbook reference link[WIP]:
    - [Integrated Beneficiary Registry - V1.0 ](https://standards.spdci.org/standards/v/wip-integrated-beneficiary-registry-v1.0.0)

    Code directory links:
    - [Assistance Unit](https://standards.spdci.org/standards/v/wip-integrated-beneficiary-registry-v1.0.0/ibr/1.-crvs/data/code-directory/cd.ibr.01-assistance_unit)
    - [Enrollment Status](https://standards.spdci.org/standards/v/wip-integrated-beneficiary-registry-v1.0.0/ibr/1.-crvs/data/code-directory/cd.ibr.02-enrolment_status)
    - [Benefit Type](https://standards.spdci.org/standards/v/wip-integrated-beneficiary-registry-v1.0.0/ibr/1.-crvs/data/code-directory/cd.ibr.03-benefit_type)
    - [Institution Type](https://standards.spdci.org/standards/v/wip-integrated-beneficiary-registry-v1.0.0/ibr/1.-crvs/data/code-directory/cd.ibr.04-institution_type)   
    - [Legal Status](https://standards.spdci.org/standards/v/wip-integrated-beneficiary-registry-v1.0.0/ibr/1.-crvs/data/code-directory/cd.ibr.05-legal_status)
    - [Social Protection Functions](https://standards.spdci.org/standards/v/wip-integrated-beneficiary-registry-v1.0.0/ibr/1.-crvs/data/code-directory/cd.ibr.06-social_protection_functions)
    - [Contribution Type](https://standards.spdci.org/standards/v/wip-integrated-beneficiary-registry-v1.0.0/ibr/1.-crvs/data/code-directory/cd.ibr.07-contribution_type)
    - [Programme Type](https://standards.spdci.org/standards/v/wip-integrated-beneficiary-registry-v1.0.0/ibr/1.-crvs/data/code-directory/cd.ibr.08-programme_type)

    Data Objects:
    - [Beneficiary](https://standards.spdci.org/standards/v/wip-integrated-beneficiary-registry-v1.0.0/ibr/1.-crvs/data/data-objects/do.ibr.01-beneficiary)
    - [Programme](https://standards.spdci.org/standards/v/wip-integrated-beneficiary-registry-v1.0.0/ibr/1.-crvs/data/data-objects/do.ibr.02-programme)
    - [Benefit](https://standards.spdci.org/standards/v/wip-integrated-beneficiary-registry-v1.0.0/ibr/1.-crvs/data/data-objects/do.ibr.03-benefit)
    - [Benefit Frequency](https://standards.spdci.org/standards/v/wip-integrated-beneficiary-registry-v1.0.0/ibr/1.-crvs/data/data-objects/do.ibr.o4-benefit-frequency) 
    - [Group](https://standards.spdci.org/standards/v/wip-social-registry-v1.0.0/social-registry/1.-crvs/data/data-objects/do.sr.02-group)
    - [Member](https://standards.spdci.org/standards/v/wip-social-registry-v1.0.0/social-registry/1.-crvs/data/data-objects/do.sr.03-member)


    Each request is build up of three parts 
    - signature 
    - header 
    - message

    Information about each part is given below

    **Signature:**
    - The signature is used to verify the integrity of the message.
    - The signature is a hash of the message and is encrypted using the private key of the sender.
    - The receiver can verify the signature using the public key of the sender.

    **Header:**
    - The header contains information about various message header, refer to the header schema for more details.

    **Message:**

    - The message contains the actual payload of the message.
    - Refer example section to get sample data and also read Gitbook for details data objects
    - The receiver can decrypt the message using the private key of the "err.receiver_id.invalid"

  version: 1.0.0
  contact:
    name: DCI Social Protection
    email: info@spdci.org
  license:
   name: DCI Social Protection License
   url: https://api.spdci.org/LICENSE.md
 
servers:
  - url: "https://sandbox.spdci.org/namespace/v1.0.0"
    description: Sandbox Server

tags: 
  - name: Async
    description: Async endpoints
  - name: Sync 
    description: Sync endpoints
  - name: Schemas
    description: Schemas
  - name: Status Codes
    description: Status Codes
  - name: SearchRequest
    x-displayName: SearchRequest
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/SearchRequest" />    
  - name: SearchResponse
    x-displayName: SearchResponse
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/SearchResponse" />  
  - name: SearchStatusReasonCode
    x-displayName: SearchStatusReasonCode
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/SearchStatusReasonCode" />        
  - name: SubscribeRequest
    x-displayName: SubscribeRequest
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/SubscribeRequest" />    
  - name: SubscribeResponse
    x-displayName: SubscribeResponse
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/SubscribeResponse" />    
  - name: SubscribeStatusReasonCode
    x-displayName: SubscribeStatusReasonCode
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/SubscribeStatusReasonCode" />        
  - name: UnSubscribeRequest
    x-displayName: UnSubscribeRequest
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/UnSubscribeRequest" />    
  - name: UnSubscribeResponse
    x-displayName: UnSubscribeResponse
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/UnSubscribeResponse" />  
  - name: UnSubscribeStatusReasonCode
    x-displayName: UnSubscribeStatusReasonCode
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/UnSubscribeStatusReasonCode" />        
  - name: TxnStatusRequest
    x-displayName: TxnStatusRequest
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/TxnStatusRequest" />    
  - name: TxnStatusResponse
    x-displayName: TxnStatusResponse
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/TxnStatusResponse" />    
  - name: EncryptedMessage
    x-displayName: EncryptedMessage
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/EncryptedMessage" />    
x-tagGroups:
  - name: API Definitions
    tags:
      - Async
      - Sync
  - name: Schema Objects
    tags:
      - SearchRequest
      - SearchResponse 
      - SubscribeRequest
      - SubscribeResponse
      - UnSubscribeRequest
      - UnSubscribeResponse 
      - EncryptedMessage
  - name: Status Codes
    tags: 
      - SearchStatusReasonCode
      - SubscribeStatusReasonCode
      - UnSubscribeStatusReasonCode
paths:
 /registry/search:
  post: 
    summary: "/registry/search"
    description: Search members(s) in registry using identifier or custom attributes
    operationId: post_reg_search
    tags: 
      -  Async
    requestBody:
      description: ""
      required: true
      content:
        application/json:
          schema:
              type: object
              properties:
                signature:  
                  $ref: "#/components/schemas/MsgSignature"
                header:
                  allOf:
                    - $ref: "#/components/schemas/MsgHeader_V1.0.0"
                    - properties:
                        action:
                          enum:
                            - search
                message:
                  type: object
                  description: The search data using which registry search to be performed
                  oneOf:
                    - $ref: "#/components/schemas/SearchRequest"
                    - $ref: "#/components/schemas/EncryptedMessage"
              required:
                - header
                - message
        multipart/form-data:
          schema:
            allOf:
              - $ref: "#/components/schemas/FileInfo"
              - properties:
                  action:
                    enum:
                      - search
    responses:
        default:
          $ref: "#/components/responses/Response"
        '401':
          $ref: "#/components/responses/HttpErrorResponse"
        '403':
          $ref: "#/components/responses/HttpErrorResponse"
        '500':
          $ref: "#/components/responses/HttpErrorResponse"
    security:
      - Authorization: [ ]
    deprecated: false

 /registry/on-search:
  post: 
    summary: "/registry/on-search"
    description: Search results through callback
    operationId: post_reg_on-search
    tags: 
      -  Async
    requestBody:
      description: ""
      required: true
      content:
        application/json:
          schema:
              type: object
              properties:
                signature:  
                  $ref: "#/components/schemas/MsgSignature"
                header:
                  allOf:
                    - $ref: "#/components/schemas/MsgCallbackHeader_V1.0.0"
                    - properties:
                        action:
                          enum:
                            - on-search
                message:
                  type: object
                  oneOf:
                    - $ref: '#/components/schemas/SearchResponse'
                    - $ref: '#/components/schemas/EncryptedMessage'
              required:
                - header
        multipart/form-data:
          schema:
            allOf:
              - $ref: "#/components/schemas/FileInfo"
              - properties:
                  action:
                    enum:
                      - on-search
    responses:
        default:
          $ref: "#/components/responses/Response"
        '401':
          $ref: "#/components/responses/HttpErrorResponse"
        '403':
          $ref: "#/components/responses/HttpErrorResponse"
        '500':
          $ref: "#/components/responses/HttpErrorResponse"
    security:
      - Authorization: [ ]
    deprecated: false
   
 /registry/subscribe:
  post: 
    summary: "/registry/subscribe"
    description: Subscribe to a life event with registry
    operationId: post_reg_subscribe
    tags: 
      -  Async
    requestBody:
      description: ""
      required: true
      content:
        application/json:
          schema:
              type: object
              properties:
                signature:  
                  $ref: "#/components/schemas/MsgSignature"
                header:
                  allOf:
                    - $ref: "#/components/schemas/MsgHeader_V1.0.0"
                    - properties:
                        action:
                          enum:
                            - subscribe
                message:
                  type: object
                  description: Subscription request which contain query with frequency and other info on which notification to be sent by registry to subscriber
                  oneOf:
                    - $ref: "#/components/schemas/SubscribeRequest"
                    - $ref: "#/components/schemas/EncryptedMessage"
              required:
                - header
                - message
        multipart/form-data:
          schema:
            allOf:
              - $ref: "#/components/schemas/FileInfo"
              - properties:
                  action:
                    enum:
                      - subscribe
    responses:
        default:
          $ref: "#/components/responses/Response"
        '401':
          $ref: "#/components/responses/HttpErrorResponse"
        '403':
          $ref: "#/components/responses/HttpErrorResponse"
        '500':
          $ref: "#/components/responses/HttpErrorResponse"
    security:
      - Authorization: [ ]
    deprecated: false
 
 /registry/on-subscribe:
  post: 
    summary: "/registry/on-subscribe"
    description: Subscribe results through callback
    operationId: post_reg_on-subscribe
    tags: 
      -  Async
    requestBody:
      description: ""
      required: true
      content:
        application/json:
          schema:
              type: object
              properties:
                signature:  
                  $ref: "#/components/schemas/MsgSignature"
                header:
                  allOf:
                    - $ref: "#/components/schemas/MsgHeader_V1.0.0"
                    - properties:
                        action:
                          enum:
                            - on-subscribe
                message:
                  type: object
                  description: Subscription information 
                  oneOf:
                    - $ref: "#/components/schemas/SubscribeResponse"
                    - $ref: "#/components/schemas/EncryptedMessage"
              required:
                - header
                - message
        multipart/form-data:
          schema:
            allOf:
              - $ref: "#/components/schemas/FileInfo"
              - properties:
                  action:
                    enum:
                      - on-subscribe
    responses:
        default:
          $ref: "#/components/responses/Response"
        '401':
          $ref: "#/components/responses/HttpErrorResponse"
        '403':
          $ref: "#/components/responses/HttpErrorResponse"
        '500':
          $ref: "#/components/responses/HttpErrorResponse"
    security:
      - Authorization: [ ]
    deprecated: false
 
 /registry/unsubscribe:
  post: 
    summary: "/registry/unsubscribe"
    description: Unsubscribe existing subscription(s) by subscription_code
    operationId: post_reg_unsubscribe
    tags: 
      -  Async
    requestBody:
      description: ""
      required: true
      content:
        application/json:
          schema:
              type: object
              properties:
                signature:  
                  $ref: "#/components/schemas/MsgSignature"
                header:
                  allOf:
                    - $ref: "#/components/schemas/MsgHeader_V1.0.0"
                    - properties:
                        action:
                          enum:
                            - unsubscribe
                message:
                  type: object
                  description: The unsubscribe request that contain subscription ids which to be removed from subscription list 
                  oneOf:
                    - $ref: "#/components/schemas/UnSubscribeRequest"
                    - $ref: "#/components/schemas/EncryptedMessage"
              required:
                - header
                - message
        multipart/form-data:
          schema:
            allOf:
              - $ref: "#/components/schemas/FileInfo"
              - properties:
                  action:
                    enum:
                      - unsubscribe
    responses:
        default:
          $ref: "#/components/responses/Response"
        '401':
          $ref: "#/components/responses/HttpErrorResponse"
        '403':
          $ref: "#/components/responses/HttpErrorResponse"
        '500':
          $ref: "#/components/responses/HttpErrorResponse"
    security:
      - Authorization: [ ]
    deprecated: false
 /registry/on-unsubscribe:
  post: 
    summary: "/registry/on-unsubscribe"
    description: Unsubscribe response as a callback
    operationId: post_reg_on-unsubscribe
    tags: 
      -  Async
    requestBody:
      description: ""
      required: true
      content:
        application/json:
          schema:
              type: object
              properties:
                signature:  
                  $ref: "#/components/schemas/MsgSignature"
                header:
                  allOf:
                    - $ref: "#/components/schemas/MsgHeader_V1.0.0"
                    - properties:
                        action:
                          enum:
                            - on-unsubscribe
                message:
                  type: object
                  oneOf:
                    - $ref: "#/components/schemas/UnSubscribeResponse"
                    - $ref: "#/components/schemas/EncryptedMessage"
              required:
                - header
                - message
        multipart/form-data:
          schema:
            allOf:
              - $ref: "#/components/schemas/FileInfo"
              - properties:
                  action:
                    enum:
                      - on-unsubscribe
    responses:
        default:
          $ref: "#/components/responses/Response"
        '401':
          $ref: "#/components/responses/HttpErrorResponse"
        '403':
          $ref: "#/components/responses/HttpErrorResponse"
        '500':
          $ref: "#/components/responses/HttpErrorResponse"
    security:
      - Authorization: [ ]
    deprecated: false

 /registry/sync/search:
  post: 
    summary: "/registry/sync/search"
    description: Search person(s) in registry using identifier or custome attributes
    operationId: post_reg_sync_search
    tags: 
      -  Sync
    requestBody:
      description: ""
      required: true
      content:
        application/json:
          schema:
              type: object
              properties:
                signature:  
                  $ref: "#/components/schemas/MsgSignature"
                header:
                  allOf:
                    - $ref: "#/components/schemas/MsgHeader_V1.0.0"
                    - properties:
                        action:
                          enum:
                            - search
                message:
                  type: object
                  description: The search data using which registry search to be performed
                  oneOf:
                    - $ref: '#/components/schemas/SearchRequest'
                    - $ref: '#/components/schemas/EncryptedMessage'
              required:
                - header
                - message
    responses:
        default:
          description: "Registry search response"
          content:
            application/json:
              schema:
                type: object
                properties:
                  signature:  
                    $ref: "#/components/schemas/MsgSignature"
                  header:
                    allOf:
                      - $ref: "#/components/schemas/MsgCallbackHeader_V1.0.0"
                      - properties:
                          action:
                            enum:
                              - on-search
                  message:
                    type: object
                    oneOf:
                      - $ref: '#/components/schemas/SearchResponse'
                      - $ref: '#/components/schemas/EncryptedMessage'
                required:
                  - header
        '401':
          $ref: "#/components/responses/HttpErrorResponse"
        '403':
          $ref: "#/components/responses/HttpErrorResponse"
        '500':
          $ref: "#/components/responses/HttpErrorResponse"
    security:
      - Authorization: [ ]
    deprecated: false

 /registry/sync/enrollment/updates:
  post: 
    summary: "/registry/sync/enrollement/updates"
    description: |- 
      update the ibr that a person is registered in a program
    operationId: post_reg_enrollment_updates
    tags: 
      -  Sync
    requestBody:
      description: ""
      required: true
      content:
        application/json:
          schema:
              type: object
              properties:
                signature:  
                  $ref: "#/components/schemas/MsgSignature"
                header:
                  allOf:
                    - $ref: "#/components/schemas/MsgHeader_V1.0.0"
                    - properties:
                        action:
                          enum:
                            - search
                message:
                  type: object
                  description: The search data using which registry search to be performed
                  oneOf:
                    - $ref: '#/components/schemas/EnrollmentUpdatesRequest'
                    - $ref: "#/components/schemas/EncryptedMessage"
              required:
                - header
                - message
        multipart/form-data:
          schema:
            allOf:
              - $ref: "#/components/schemas/FileInfo"
              - properties:
                  action:
                    enum:
                      - search
    responses:
        default:
          description: "enrollment updates response"
          content:
            application/json:
              schema:
                type: object
                properties:
                  signature:  
                    $ref: "#/components/schemas/MsgSignature"
                  header:
                    allOf:
                      - $ref: "#/components/schemas/MsgCallbackHeader_V1.0.0"
                      - properties:
                          action:
                            enum:
                              - on-search
                  message:
                    type: object
                    oneOf:
                      - $ref: '#/components/schemas/EnrollmentUpdatesResponse'
                      - $ref: '#/components/schemas/EncryptedMessage'
                required:
                  - header
        '401':
          $ref: "#/components/responses/HttpErrorResponse"
        '403':
          $ref: "#/components/responses/HttpErrorResponse"
        '500':
          $ref: "#/components/responses/HttpErrorResponse"
    deprecated: false

 /registry/sync/enrolled:
  post: 
    summary: "/registry/sync/enrolled"
    description: |- 
      check if member is registered in a program as beneficiary
    operationId: post_reg_enrolled
    tags: 
      -  Sync
    requestBody:
      description: ""
      required: true
      content:
        application/json:
          schema:
              type: object
              properties:
                signature:  
                  $ref: "#/components/schemas/MsgSignature"
                header:
                  allOf:
                    - $ref: "#/components/schemas/MsgHeader_V1.0.0"
                    - properties:
                        action:
                          enum:
                            - search
                message:
                  type: object
                  description: The search data using which registry search to be performed
                  oneOf:
                    - $ref: '#/components/schemas/EnrolledRequest'
                    - $ref: "#/components/schemas/EncryptedMessage"
              required:
                - header
                - message
        multipart/form-data:
          schema:
            allOf:
              - $ref: "#/components/schemas/FileInfo"
              - properties:
                  action:
                    enum:
                      - search
    responses:
        default:
          description: "support response"
          content:
            application/json:
              schema:
                type: object
                properties:
                  signature:  
                    $ref: "#/components/schemas/MsgSignature"
                  header:
                    allOf:
                      - $ref: "#/components/schemas/MsgCallbackHeader_V1.0.0"
                      - properties:
                          action:
                            enum:
                              - on-search
                  message:
                    type: object
                    oneOf:
                      - $ref: "#/components/schemas/EnrolledResponse"
                      - $ref: '#/components/schemas/EncryptedMessage'
                required:
                  - header
        '401':
          $ref: "#/components/responses/HttpErrorResponse"
        '403':
          $ref: "#/components/responses/HttpErrorResponse"
        '500':
          $ref: "#/components/responses/HttpErrorResponse"
    deprecated: false

components:
  schemas:
    ###### src/extensions/cdpi schema objects
    cdpi_PersonId: 
      $ref: ../extensions/cdpi/PersonId.yaml

    ###### src/extensions/dci schema objects
    dci_Person: 
      $ref: ../extensions/dci/Person.yaml
    dci_IdentifierType: 
      $ref: ../extensions/dci/IdentifierType.yaml
    dci_IdentifierTypeValue: 
      $ref: ../extensions/dci/IdentifierTypeValue.yaml
    dci_MaritalStatus: 
      $ref: ../extensions/dci/MaritalStatus.yaml
    dci_Name: 
      $ref: ../extensions/dci/Name.yaml
    dci_PersonRecord: 
      $ref: ../extensions/dci/PersonRecord.yaml
    dci_RecordType: 
      $ref: ../extensions/dci/RecordType.yaml
    dci_Sex: 
      $ref: ../extensions/dci/Sex.yaml
    dci_VitalEvents: 
      $ref: ../extensions/dci/VitalEvents.yaml

      

    ###### src/registry/schema objects
    NotifyEventRequest: 
      $ref: schema/NotifyEventRequest.yaml
    RegistryEventType:
      $ref: ibr/RegistryEventType.yaml
    RegistryRecord:
      $ref: schema/RegistryRecord.yaml
    RegistryRecordType: 
      $ref: schema/RegistryRecordType.yaml
    RegistryType: 
      $ref: ibr/RegistryType.yaml
    SearchRequest: 
      $ref: ibr/SearchRequest.yaml
    SearchResponse: 
      $ref: ibr/SearchResponse.yaml
    SearchStatusReasonCode: 
      $ref: schema/SearchStatusReasonCode.yaml
    SubscribeRequest: 
      $ref: ibr/SubscribeRequest.yaml
    SubscribeResponse: 
      $ref: ibr/SubscribeResponse.yaml
    SubscribeStatusReasonCode: 
      $ref: schema/SubscribeStatusReasonCode.yaml
    SubscriptionCode: 
      $ref: schema/SubscriptionCode.yaml
    SubscriptionCodeList: 
      $ref: schema/SubscriptionCodeList.yaml
    SubscriptionInfo:
      $ref: schema/SubscriptionInfo.yaml
    SubscriptionStatus:
        $ref: schema/SubscriptionStatus.yaml
    UnSubscribeRequest: 
      $ref: schema/UnSubscribeRequest.yaml
    UnSubscribeResponse: 
      $ref: schema/UnSubscribeResponse.yaml
    UnSubscribeStatusReasonCode: 
      $ref: schema/UnSubscribeStatusReasonCode.yaml   
    EnrollmentUpdatesRequest:
      $ref: ibr/EnrollmentUpdatesRequest.yaml
    EnrollmentUpdatesResponse:
      $ref: ibr/EnrollmentUpdatesResponse.yaml
    EnrolledRequest:
      $ref: ibr/EnrolledRequest.yaml
    EnrolledResponse:
      $ref: ibr/EnrolledResponse.yaml
            
  
    ###### Common schema objects
    Ack: 
      $ref: ../common/schema/Ack.yaml
    AdditionalInfo:
      $ref: ../common/schema/AdditionalInfo.yaml
    AttributeNameValue: 
      $re f: ../common/schema/AttributeNameValue.yaml
    AttributeNameValueList: 
      $ref: ../common/schema/AttributeNameValueList.yaml
    AttributeValue: 
      $ref: ../common/schema/AttributeValue.yaml
    Authorize: 
      $ref: ../common/schema/Authorize.yaml      
    Consent: 
      $ref: ../common/schema/Consent.yaml
    DateTime: 
      $ref: ../common/schema/DateTime.yaml
    EncryptedMessage: 
      $ref: ../common/schema/EncryptedMessage.yaml
    Error: 
      $ref: ../common/schema/Error.yaml
    EventFrequency:
      $ref: ../common/schema/EventFrequency.yaml
    ExpCondition: 
      $ref: ../common/schema/ExpCondition.yaml
    ExpOperator: 
      $ref: ../common/schema/ExpOperator.yaml
    ExpPredicate: 
      $ref: ../common/schema/ExpPredicate.yaml
    ExpPredicateList: 
      $ref: ../common/schema/ExpPredicateList.yaml
    ExpPredicateWithCondition: 
      $ref: ../common/schema/ExpPredicateWithCondition.yaml
    ExpPredicateWithConditionList: 
      $ref: ../common/schema/ExpPredicateWithConditionList.yaml
    FileInfo: 
      $ref: ../common/schema/FileInfo.yaml
    IdentifierType: 
      $ref: ../common/schema/IdentifierType.yaml
    IdentifierTypeValue: 
      $ref: ../common/schema/IdentifierTypeValue.yaml
    LanguageCode: 
      $ref: ../common/schema/LanguageCode.yaml
    LatLong: 
      $ref: ../common/schema/LatLong.yaml
    Meta:
      $ref: ../common/schema/Meta.yaml
    MsgCallbackHeader_V1.0.0: 
      $ref: ibr/MsgCallbackHeader_V1.0.0.yaml
    MsgHeader_V1.0.0: 
      $ref: ibr/MsgHeader_V1.0.0.yaml
    MsgHeaderStatusReasonCode: 
      $ref: ../common/schema/MsgHeaderStatusReasonCode.yaml
    MsgSignature: 
      $ref:  ../common/schema/MsgSignature.yaml
    Pagination: 
      $ref: ../common/schema/Pagination.yaml
    PaginationRequest: 
      $ref: ../common/schema/PaginationRequest.yaml
    QueryType:
      $ref: ../common/schema/QueryType.yaml
    ReferenceId: 
      $ref: ../common/schema/ReferenceId.yaml
    ReferenceIdList: 
      $ref: ../common/schema/ReferenceIdList.yaml
    RequestStatus: 
      $ref: ../common/schema/RequestStatus.yaml
    SearchSort: 
      $ref: ../common/schema/SearchSort.yaml
    SearchSortList: 
      $ref: ../common/schema/SearchSortList.yaml
    TransactionId:  
      $ref: ../common/schema/TransactionId.yaml

  responses: 
    HttpErrorResponse:
      $ref: ../common/response/HttpErrorResponse.yaml       
    Response:
      $ref: ../common/response/Response.yaml    
  securitySchemes:
    Authorization:
      $ref: ../common/security/Authorization.yaml
